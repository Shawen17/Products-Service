services:
  beemath_frontend:
    image: beemath_frontend:latest
    container_name: beemath_frontend
    ports:
      - 3003:80
    restart: always
    depends_on:
      - beemath_backend
    build:
      context: ./beemath_frontend
      dockerfile: Dockerfile
    volumes:
      - ./beemath_frontend/src:/beemath_frontend/src
      - static:/static
      - react_data:/react/build
    networks:
      - app_network
    environment:
      BASE_URL: ${BASE_URL}
      REACT_APP_PAYSTACK_PUBLIC_KEY: ${REACT_APP_PAYSTACK_PUBLIC_KEY}

  beemath_backend:
    image: beemath_backend:latest
    container_name: beemath_backend
    restart: always
    ports:
      - "8000:8000"
    build:
      context: ./beemath_backend
      dockerfile: Dockerfile
      args:
       SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - postgres
    volumes:
      - ./beemath_backend:/beemath_backend
      - static:/static
      - media:/media
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      SECRET_KEY: ${SECRET_KEY}
    networks:
      - app_network

  products-nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static:/static
      - media:/app/media
      - react_data:/usr/share/nginx/html
    ports:
      - "8083:80"
    depends_on:
      - beemath_backend
    networks:
      - app_network

  postgres:
    image: postgres:latest  
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: beemath_database
    ports:
      - 5432:5432
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"  # Expose pgAdmin on 8081 for both container and host
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
    command:
      - "gunicorn"
      - "--bind=0.0.0.0:8081"  # Ensure pgAdmin listens on port 8081
      - "pgadmin4:app"
    networks:
      - app_network


volumes:
  postgres_data:
  pgadmin_data:
  static:
  media:
  react_data:
  
networks:
  app_network:
    external: true
